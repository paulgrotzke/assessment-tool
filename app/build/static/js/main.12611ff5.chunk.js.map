{"version":3,"sources":["Components/GlobalStyles.tsx","lib/firebase.ts","Pages/Survey/hooks/useLocalDocRef.ts","hooks/useQuestions.ts","Components/Login.tsx","Components/AuthCheck.tsx","Pages/Survey/Components/Buttons.tsx","Pages/Survey/Components/Feedback.tsx","Pages/Survey/Components/GeneralQuestions.tsx","Pages/Survey/Components/Rating.tsx","Pages/Survey/hooks/useResults.ts","Pages/Survey/Components/Results.tsx","Pages/Survey/Components/Question.tsx","Pages/Survey/Disclaimer.tsx","Pages/Survey/Survey.tsx","Pages/Admin/hooks/useSurveys.ts","Pages/Admin/Components/GeneralStatistics.tsx","Pages/Admin/Components/QuestionStatistics.tsx","Pages/Admin/Components/Buttons.tsx","Pages/Admin/Components/Edit.tsx","Pages/Admin/Components/NewQuestion.tsx","Pages/Admin/Controllcenter.tsx","App.tsx","index.tsx"],"names":["GlobalStylesComponent","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","useLocalDocRef","localStorage","getItem","useQuestions","ref","collection","useCollection","data","questions","docs","map","doc","push","id","focusArea","digitalCapability","practiceItem","listing","i","j","tmp","Login","props","role","Wrapper","Input","placeholder","type","value","password","onChange","e","setPassword","target","Button","onClick","loginUser","styled","div","input","button","AuthCheck","useAuthState","user","useState","a","signOut","signInWithEmailAndPassword","uid","children","Buttons","amountQuestions","postAnswer","answer","answerValue","raiting","newAnswerRef","localDocRef","questionId","set","merge","counter","defaultRaiting","PrevButton","setCounter","setRaiting","setShowGeneralQuestions","disabled","setShowFeedback","Feedback","comprehensivenessInput","Array","fill","consistencyInput","problemAdequacyInput","comprehensiveness","consistency","problemAdequacy","feedback","setFeedback","postFeedback","className","Checkboxes","name","checked","setShowResults","GeneralQuestions","postgeneralQuestion","generalQuestions","isEmpty","setIsEmpty","useEffect","amountEmployees","trim","companyPosition","industryBelong","Select","setGeneralQuestions","maxLength","setShowSurvey","select","Raiting","bubbles","question","useResults","resultsRef","resultsData","results","Results","areas","capabilityScoring","capabilityLength","result","resultList","Object","keys","key","subScoring","scoring","finalScoring","capability","toFixed","FocusArea","capabilities","entries","window","print","Question","questionLength","Disclaimer","add","then","docRef","setItem","catch","Survey","showFeedback","showResults","showSurvey","showGeneralQuestions","useSurveys","generealQuestionsRef","surveyData","forEach","GeneralStatistics","surveyList","surveys","companyPositionValues","industryBelongValues","amountEmployeesValues","undefined","Area","QuestionStatistics","statistics","setStatistics","setScoring","capaScoring","setCapaScoring","focusScoring","setFocusScoring","useMemo","docId","get","test","entry","indicator","setShowQuestionStatistics","setShowAddNew","setShowGeneral","Edit","editFocusArea","setEditFocusArea","editDigitalCapability","setEditDigitalCapability","editPracticeItem","setEditPracticeItem","updateQuestion","update","setEdit","NewQuestion","edit","postQuestion","newQuestionRef","deleteQuestion","confirm","delete","setFocusArea","setDigitalCapability","setPracticeItem","sortUp","sortDown","Controllcenter","showQuestionStatistics","showGeneral","showAddNew","App","exact","path","from","to","ReactDOM","render","GlobalStyles","document","getElementById"],"mappings":"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","file":"static/js/main.12611ff5.chunk.js","sourcesContent":["import { GlobalStyles } from 'twin.macro';\n\nconst GlobalStylesComponent = () => {\n  return <GlobalStyles />;\n};\n\nexport default GlobalStylesComponent;\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyChJe4lkyNSULh7OCZ2t6zT56EvrSZEEgU',\n  authDomain: 'assessment-tool-f4f2a.firebaseapp.com',\n  projectId: 'assessment-tool-f4f2a',\n  storageBucket: 'assessment-tool-f4f2a.appspot.com',\n  messagingSenderId: '483174350936',\n  appId: '1:483174350936:web:087639822f4c06babf4a2d',\n}\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n","const useLocalDocRef = () => {\n  const answeredDocId = localStorage.getItem('docRef')!\n\n  return answeredDocId\n}\n\nexport default useLocalDocRef\n","import { useCollection } from 'react-firebase-hooks/firestore'\nimport { firestore } from '../lib/firebase'\nimport * as t from '../Pages/Survey/types'\n\nconst useQuestions = () => {\n  const ref = firestore.collection('questions')\n  const [data] = useCollection(ref)\n  const questions: t.Question[] = []\n  data?.docs.map((doc: t.QuestionDocument) =>\n    questions.push({\n      id: doc.id,\n      focusArea: doc.data().focusArea,\n      digitalCapability: doc.data().digitalCapability,\n      practiceItem: doc.data().practiceItem,\n      listing: doc.data().listing,\n    })\n  )\n\n  if (questions.length !== 0) {\n    for (let i = 0; i < questions.length; i++) {\n      for (let j = 0; j + 1 < questions.length; j++) {\n        if (questions[j]['listing'] > questions[j + 1]['listing']) {\n          let tmp = questions[j]\n          questions[j] = questions[j + 1]\n          questions[j + 1] = tmp\n        }\n      }\n    }\n  }\n\n  return questions\n}\n\nexport default useQuestions\n","import tw, { styled } from 'twin.macro';\n\ntype Props = {\n  role: string;\n  loginUser: () => void;\n  password: string;\n  setPassword: (password: string) => void;\n};\n\nconst Login = (props: Props) => {\n  if (props.role === 'admin') {\n    return (\n      <Wrapper>\n        <h2>Digify Admin Panel</h2>\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          value={props.password}\n          onChange={(e) => props.setPassword(e.target.value)}></Input>\n        <Button onClick={() => props.loginUser()}>Login</Button>\n      </Wrapper>\n    );\n  } else\n    return (\n      <Wrapper>\n        <h2>Digify Assement-Tool</h2>\n        <p>\n          Let's see how digital your company really is. We will help you to be successfull\n          in the digital transformation. Please enter the password to start the assessment\n          guide.\n        </p>\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          value={props.password}\n          onChange={(e) => props.setPassword(e.target.value)}></Input>\n        <Button onClick={() => props.loginUser()}>Login</Button>\n      </Wrapper>\n    );\n};\n\nexport default Login;\n\nconst Wrapper = styled.div`\n  ${tw`\n    space-y-4 bg-white p-8 rounded-md shadow-2xl\n    w-11/12 sm:w-10/12 md:w-6/12 lg:w-4/12 xl:w-3/12 2xl:w-3/12\n  `}\n\n  > h2 {\n    ${tw`\n      mb-6\n      font-light text-3xl uppercase\n    `}\n  }\n`;\n\nconst Input = styled.input`\n  ${tw`\n    p-2 w-full\n    rounded-md shadow-sm border border-gray-300\n  `}\n`;\n\nconst Button = styled.button`\n  ${tw`\n    bg-indigo-600 rounded-md py-2 w-full\n    font-medium text-lg text-white uppercase\n    focus:ring-offset-2 focus:ring-indigo-500 hover:bg-indigo-500\n  `}\n`;\n","import { useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../lib/firebase';\nimport Login from './Login';\n\ntype Props = {\n  children: React.ReactNode;\n  role: string;\n};\n\nconst AuthCheck = (props: Props) => {\n  const [user] = useAuthState(auth);\n  const [password, setPassword] = useState('');\n\n  const loginUser = async () => {\n    await auth.signOut();\n    await auth.signInWithEmailAndPassword(\n      props.role + '@user.de',\n      password,\n    );\n  };\n\n  if (\n    props.role === 'admin' &&\n    user?.uid === 'wdvVEGjFqJODyhG8t94EBUK89yN2'\n  ) {\n    return <>{props.children}</>;\n  }\n\n  if (\n    props.role === 'user' &&\n    user?.uid === '1bqjrjvEsaZxlrPh4cs3cqaN6ad2'\n  ) {\n    return <>{props.children}</>;\n  } else {\n    return (\n      <Login\n        role={props.role}\n        loginUser={loginUser}\n        password={password}\n        setPassword={setPassword}\n      />\n    );\n  }\n};\n\nexport default AuthCheck;\n","import tw, { styled } from 'twin.macro'\nimport useQuestions from '../../../hooks/useQuestions'\nimport * as t from '../types'\n\ntype Props = {\n  counter: t.Counter\n  setCounter: ({ value: number }) => void\n  raiting: t.Raiting\n  setRaiting: (raiting: t.Raiting) => void\n  setShowFeedback: (bool: boolean) => void\n  setShowGeneralQuestions: (bool: boolean) => void\n  localDocRef: string\n  firestore: any\n}\n\nconst Buttons = (props: Props) => {\n  const questions = useQuestions()\n  const amountQuestions = questions.length\n\n  const postAnswer = async () => {\n    const answer: t.Answer = {\n      answerValue: props.raiting.value,\n      focusArea: props.raiting.focusArea,\n      digitalCapability: props.raiting.digitalCapability,\n      practiceItem: props.raiting.practiceItem,\n    }\n\n    const newAnswerRef = props.firestore\n      .collection('surveys')\n      .doc(props.localDocRef)\n      .collection('answers')\n      .doc(props.raiting.questionId)\n    await newAnswerRef.set(answer, { merge: true })\n    await newAnswerRef.set(props.counter, { merge: true })\n  }\n\n  const defaultRaiting = {\n    questionId: '',\n    value: 0,\n    digitalCapability: '',\n    focusArea: '',\n    practiceItem: '',\n  }\n\n  return (\n    <div>\n      {props.counter.value > 0 && (\n        <PrevButton\n          onClick={() => {\n            props.setCounter({\n              value: props.counter.value - 1,\n            })\n            props.setRaiting(defaultRaiting)\n          }}\n        >\n          Previous\n        </PrevButton>\n      )}\n      {props.counter.value === 0 && (\n        <PrevButton\n          onClick={() => {\n            props.setShowGeneralQuestions(true)\n            props.setRaiting(defaultRaiting)\n          }}\n        >\n          Back to General\n        </PrevButton>\n      )}\n      {amountQuestions - 1 === props.counter.value && (\n        <Button\n          disabled={props.raiting.value === false}\n          onClick={() => {\n            postAnswer()\n            props.setShowFeedback(true)\n            props.setRaiting(defaultRaiting)\n          }}\n        >\n          Go To Feedback\n        </Button>\n      )}\n      {amountQuestions > 1 && amountQuestions - 1 !== props.counter.value && (\n        <Button\n          disabled={props.raiting.value === false}\n          onClick={() => {\n            props.setCounter({\n              value: props.counter.value + 1,\n            })\n            postAnswer()\n            props.setRaiting(defaultRaiting)\n          }}\n        >\n          Next Question\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default Buttons\n\nconst Button = styled.button`\n  ${tw`\n    py-2 px-4 mt-4\n    bg-indigo-600 rounded-md\n    text-white border-2 border-indigo-600\n    hover:bg-indigo-500 hover:border-indigo-500\n    disabled:opacity-50 disabled:cursor-not-allowed\n  `}\n`\n\nconst PrevButton = styled.button`\n  ${tw`\n    rounded-md py-2 px-2 mt-4 mr-4\n    text-indigo-600 border-2 border-indigo-600\n    hover:bg-gray-100\n  `}\n`\n","import { useState } from 'react'\nimport tw, { styled } from 'twin.macro'\nimport * as t from '../types'\n\ntype Props = {\n  setShowResults: (bool: boolean) => void\n  setShowFeedback: (bool: boolean) => void\n  localDocRef: string\n  firestore: any\n}\n\nconst Feedback = (props: Props) => {\n  let comprehensivenessInput = new Array(5).fill(false)\n  let consistencyInput = new Array(5).fill(false)\n  let problemAdequacyInput = new Array(5).fill(false)\n\n  const [feedback, setFeedback] = useState<t.FeedbackAnswer>({\n    comprehensiveness: null,\n    consistency: null,\n    problemAdequacy: null,\n  })\n\n  const postFeedback = async () => {\n    const newAnswerRef = props.firestore\n      .collection('surveys')\n      .doc(props.localDocRef)\n    await newAnswerRef.set(feedback, { merge: true })\n  }\n\n  return (\n    <Wrapper>\n      <h2>Great!</h2>\n      <h4>You have successfully passed all assessment questions!</h4>\n      <p>\n        In order to improve our tool continously, I would like to ask you for\n        some feedback. Please rate the assessment tool including all dimensions,\n        digital capabilities and practice items with regard to the three\n        criteria:\n      </p>\n      <div className=\"area\">\n        <h4>Comprehensiveness</h4>\n        <Checkboxes>\n          <p className=\"text-left\">No (0)</p>\n          {comprehensivenessInput.map((input, i) => {\n            return (\n              <Input\n                key={i + 1}\n                type=\"radio\"\n                name=\"comprehensivenessInput\"\n                checked={input[i]}\n                onClick={() => {\n                  setFeedback({\n                    ...feedback,\n                    comprehensiveness: i,\n                  })\n                  comprehensivenessInput.fill(false)\n                  comprehensivenessInput[i] = true\n                }}\n              ></Input>\n            )\n          })}\n          <p className=\"text-right\">Full (4)</p>\n        </Checkboxes>\n      </div>\n      <div className=\"area\">\n        <h4>Consistency</h4>\n        <Checkboxes>\n          <p className=\"text-left\">No (0)</p>\n          {consistencyInput.map((input, i) => {\n            return (\n              <Input\n                key={i + 1}\n                type=\"radio\"\n                name=\"consistencyInput\"\n                checked={input[i]}\n                onClick={() => {\n                  setFeedback({\n                    ...feedback,\n                    consistency: i,\n                  })\n                  consistencyInput.fill(false)\n                  consistencyInput[i] = true\n                }}\n              ></Input>\n            )\n          })}\n          <p className=\"text-right\">Full (4)</p>\n        </Checkboxes>\n      </div>\n      <div className=\"area\">\n        <h4>Problem adequacy</h4>\n        <Checkboxes>\n          <p className=\"text-left\">No (0)</p>\n          {problemAdequacyInput.map((input, i) => {\n            return (\n              <Input\n                key={i + 1}\n                type=\"radio\"\n                name=\"problemAdequacyInput\"\n                checked={input[i]}\n                onClick={() => {\n                  setFeedback({\n                    ...feedback,\n                    problemAdequacy: i,\n                  })\n                  problemAdequacyInput.fill(false)\n                  problemAdequacyInput[i] = true\n                }}\n              ></Input>\n            )\n          })}\n          <p className=\"text-right\">Full (4)</p>\n        </Checkboxes>\n      </div>\n      <Button\n        disabled={\n          feedback.comprehensiveness === null ||\n          feedback.consistency === null ||\n          feedback.problemAdequacy === null\n        }\n        onClick={() => {\n          props.setShowResults(true)\n          props.setShowFeedback(false)\n          postFeedback()\n        }}\n      >\n        Finish Survey\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default Feedback\n\nconst Wrapper = styled.div`\n  > h2 {\n    ${tw`\n      mb-6 pt-8 \n      font-light text-3xl uppercase \n    `}\n  }\n\n  > h3 {\n    ${tw`\n      mt-4 mb-1 \n      font-medium text-lg \n    `}\n  }\n\n  > .area {\n    ${tw`\n      my-6 py-3\n      rounded-md shadow-2xl bg-gray-100 text-center\n    `}\n\n    ${tw`\n      mt-4 mb-1 \n      font-medium text-lg\n    `}\n  }\n`\n\nconst Checkboxes = styled.div`\n  ${tw`\n      flex \n      font-medium\n    `}\n\n  > .text-left {\n    ${tw`\n      flex-1 \n      mr-3\n      text-right \n    `}\n  }\n\n  > .text-right {\n    ${tw`\n      flex-1\n      ml-3\n      text-left\n    `}\n  }\n`\n\nconst Input = styled.input`\n  ${tw`\n      flex-none \n      my-1 mx-1\n      checked:bg-indigo-500\n    `}\n`\n\nconst Button = styled.button`\n  ${tw`\n    py-2 px-6 mt-4\n    text-white bg-indigo-600 rounded-md \n    focus:ring-offset-2 focus:ring-indigo-500 hover:bg-indigo-500\n    disabled:opacity-50 disabled:cursor-not-allowed\n  `}\n`\n","import { useEffect, useState } from 'react'\nimport tw, { styled, css } from 'twin.macro'\nimport * as t from '../types'\n\ntype Props = {\n  generalQuestions: t.GeneralQuestionsAnswer\n  setGeneralQuestions: (answer: t.GeneralQuestionsAnswer) => void\n  setShowGeneralQuestions: (bool: boolean) => void\n  setShowSurvey: (bool: boolean) => void\n  localDocRef: string\n  firestore: any\n}\n\nconst GeneralQuestions = (props: Props) => {\n  const postgeneralQuestion = async () => {\n    const newAnswerRef = props.firestore\n      .collection('surveys')\n      .doc(props.localDocRef)\n    await newAnswerRef.set(props.generalQuestions, { merge: true })\n  }\n\n  const [isEmpty, setIsEmpty] = useState(true)\n\n  useEffect(() => {\n    if (\n      props.generalQuestions.amountEmployees?.trim().length !== 0 &&\n      props.generalQuestions.companyPosition?.trim().length !== 0 &&\n      props.generalQuestions.industryBelong?.trim().length !== 0\n    ) {\n      setIsEmpty(false)\n    }\n  }, [props.generalQuestions])\n\n  return (\n    <Wrapper>\n      <h2>General Questions</h2>\n      <h3>How many employees work in the company?</h3>\n      <Select\n        onChange={(e) => {\n          props.setGeneralQuestions({\n            ...props.generalQuestions,\n            amountEmployees: e.target.value,\n          })\n        }}\n      >\n        <option className=\"placeholder\">Please choose an option.</option>\n        <option value=\"1-249\">1-249</option>\n        <option value=\"250-999\">250-999</option>\n        <option value=\">1000\">greater 1000</option>\n      </Select>\n      <h3>To which industry does the company belong?</h3>\n      <Input\n        placeholder=\"Your answer (up to 50 chars)\"\n        type=\"text\"\n        maxLength={50}\n        onChange={(e) => {\n          props.setGeneralQuestions({\n            ...props.generalQuestions,\n            industryBelong: e.target.value,\n          })\n        }}\n      ></Input>\n      <h3>What is your position in the company?</h3>\n\n      <Input\n        placeholder=\"Your answer (up to 50 chars)\"\n        type=\"text\"\n        maxLength={50}\n        onChange={(e) => {\n          props.setGeneralQuestions({\n            ...props.generalQuestions,\n            companyPosition: e.target.value,\n          })\n        }}\n      ></Input>\n      <Button\n        disabled={isEmpty}\n        onClick={() => {\n          postgeneralQuestion()\n          props.setShowGeneralQuestions(false)\n          props.setShowSurvey(true)\n        }}\n      >\n        Start survey\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default GeneralQuestions\n\nconst Wrapper = styled.div`\n  > h2 {\n    ${tw`\n      mb-6 pt-8\n      font-light text-3xl uppercase \n    `}\n  }\n\n  > h3 {\n    ${tw`\n      mt-4 mb-1\n      font-medium text-lg \n    `}\n  }\n`\n\nconst Select = styled.select`\n  ${tw`\n    py-2 px-1 m-0\n    rounded-md shadow-sm border border-gray-300\n    focus:outline-none focus:ring focus:ring-indigo-400\n    bg-white\n  `}\n`\n\nconst Input = styled.input`\n  ${tw`\n    w-full \n    p-2 m-0\n    rounded-md shadow-sm border border-gray-300\n    focus:outline-none focus:ring focus:ring-indigo-400\n    placeholder-black text-black\n  `}\n`\n\nconst Button = styled.button`\n  ${tw`\n    py-2 px-6 mt-4\n    bg-indigo-600 rounded-md text-white\n    focus:ring-offset-2 focus:ring-indigo-500 hover:bg-indigo-500\n    disabled:opacity-50 disabled:cursor-not-allowed\n  `}\n`\n","import * as t from '../types'\nimport tw, { styled } from 'twin.macro'\n\ntype Props = {\n  setRaiting: (raiting: t.Raiting) => void\n  question: t.Question\n}\n\nconst Raiting = (props: Props) => {\n  let bubbles = new Array(5).fill(false)\n\n  return (\n    <Wrapper>\n      <h3>Rate your company</h3>\n      <p>\n        To which level has your company <b>implemented</b> the practice item\n      </p>\n      <Checkboxes>\n        <p className=\"text-left\">Not (0)</p>\n        {bubbles.map((input, i) => {\n          return (\n            <Input\n              className=\"bubbles\"\n              key={i + 1}\n              type=\"radio\"\n              name=\"radio\"\n              checked={input[i]}\n              onClick={() => {\n                props.setRaiting({\n                  questionId: props.question.id,\n                  value: i,\n                  focusArea: props.question.focusArea,\n                  digitalCapability: props.question.digitalCapability,\n                  practiceItem: props.question.practiceItem,\n                })\n                bubbles.fill(false)\n                bubbles[i] = true\n              }}\n            ></Input>\n          )\n        })}\n        <p className=\"text-right\">Fully (4)</p>\n      </Checkboxes>\n    </Wrapper>\n  )\n}\n\nexport default Raiting\n\nconst Wrapper = styled.div`\n  ${tw`\n      p-4 my-6\n      rounded-md shadow-xl bg-gray-100\n    `}\n\n  > h2 {\n    ${tw`\n      mb-6\n      font-light text-3xl uppercase \n    `}\n\n    > .question {\n      ${tw`\n      text-3xl text-indigo-500\n    `}\n    }\n  }\n\n  > h3 {\n    ${tw`\n      mt-2 mb-1\n      font-medium text-lg \n    `}\n  }\n`\n\nconst Checkboxes = styled.div`\n  ${tw`\n      flex \n      mt-4\n    `}\n\n  > .text-left {\n    ${tw`\n      flex-1 \n      mr-3\n      text-right font-medium \n    `}\n  }\n\n  > .text-right {\n    ${tw`\n      flex-1 \n      ml-3\n      text-left font-medium\n    `}\n  }\n`\n\nconst Input = styled.input`\n  ${tw`\n      flex-none \n      mt-1 mx-1 \n      checked:bg-indigo-500 cursor-pointer\n    `}\n`\n","import { firestore } from '../../../lib/firebase'\nimport { useCollection } from 'react-firebase-hooks/firestore'\nimport * as t from '../types'\nimport useLocalDocRef from './useLocalDocRef'\n\nconst useResults = () => {\n  const localDocRef = useLocalDocRef()\n  const resultsRef = firestore\n    .collection('surveys')\n    .doc(localDocRef)\n    .collection('answers')\n  const [resultsData] = useCollection(resultsRef)\n\n  const results: t.Answer[] = []\n  resultsData?.docs.map((doc: t.AnswerDocument) =>\n    results.push({\n      answerValue: doc.data().answerValue,\n      digitalCapability: doc.data().digitalCapability,\n      focusArea: doc.data().focusArea,\n      practiceItem: doc.data().practiceItem,\n    })\n  )\n  return results\n}\n\nexport default useResults\n","import tw, { styled } from 'twin.macro'\nimport useResults from '../hooks/useResults'\n\nconst Results = () => {\n  const results = useResults()\n\n  const areas = {}\n  let capabilityScoring = {}\n  let capabilityLength = {}\n\n  for (const result of results) {\n    const { answerValue, focusArea, digitalCapability, practiceItem } = result\n    if (!areas[focusArea]) {\n      areas[focusArea] = {}\n      capabilityScoring[focusArea] = {}\n      capabilityLength[focusArea] = {}\n    }\n    if (!areas[focusArea][digitalCapability]) {\n      areas[focusArea][digitalCapability] = {}\n      capabilityScoring[focusArea][digitalCapability] = 0\n      capabilityLength[focusArea][digitalCapability] = 0\n    }\n    areas[focusArea][digitalCapability][practiceItem] = answerValue\n    capabilityScoring[focusArea][digitalCapability] += answerValue\n    capabilityLength[focusArea][digitalCapability] += 1\n  }\n  const resultList = Object.keys(areas).map((key) => ({\n    [key]: areas[key],\n  }))\n\n  let subScoring = {}\n  let scoring = {}\n  let finalScoring = 0\n  for (let focusArea in capabilityScoring) {\n    for (let capability in capabilityScoring[focusArea]) {\n      subScoring = {\n        ...subScoring,\n        [focusArea]: {\n          ...subScoring[focusArea],\n          [capability]:\n            capabilityScoring[focusArea][capability] /\n            capabilityLength[focusArea][capability],\n        },\n      }\n    }\n    scoring = {\n      ...scoring,\n      [focusArea]: 0,\n    }\n    for (let key in subScoring[focusArea]) {\n      scoring = {\n        ...scoring,\n        [focusArea]: scoring[focusArea] + subScoring[focusArea][key],\n      }\n    }\n    scoring = {\n      ...scoring,\n      [focusArea]:\n        scoring[focusArea] / Object.keys(subScoring[focusArea]).length,\n    }\n  }\n  for (let key in scoring) {\n    finalScoring = finalScoring + scoring[key]\n  }\n\n  finalScoring = finalScoring / Object.keys(scoring).length\n\n  return (\n    <Wrapper>\n      <div className=\"no-print\">\n        <h2>Great!</h2>\n        <p>You have successfully passed the assessment.</p>\n        <p>Congratulations you have reached a total digital score of</p>\n        <p className=\"result\">{finalScoring.toFixed(2)} Points</p>\n        <p>In general results can range from:</p>\n        <p>\n          <b>0.00</b> - traditional non-digital incumbent\n        </p>\n        <p>to</p>\n        <p>\n          <b>4.00</b> - digital enterprise\n        </p>\n      </div>\n      <div className=\"printable\">\n        {resultList.map((result) => {\n          return (\n            <FocusArea>\n              <div className=\"header\">\n                <p className=\"focusArea\">{Object.keys(result)}</p>\n                <p className=\"scoring\">\n                  {scoring[Object.keys(result)[0]].toFixed(2)}\n                </p>\n              </div>\n              {Object.keys(result[Object.keys(result)[0]]).map(\n                (capabilities) => {\n                  return (\n                    <div className=\"capa-wrapper\">\n                      <div className=\"capa-scoring\">\n                        <p className=\"capabilities\">{capabilities}</p>\n                        <p className=\"scoring\">\n                          {subScoring[Object.keys(result)[0]][\n                            capabilities\n                          ].toFixed(2)}\n                        </p>\n                      </div>\n                      {Object.entries(\n                        result[Object.keys(result)[0]][capabilities]\n                      ).map((practiceItem) => (\n                        <div className=\"result\">\n                          <div className=\"practiceItem\">\n                            {practiceItem[0] + ' '}\n                          </div>\n                          <div className=\"points\">\n                            {practiceItem[1] + ' P.'}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )\n                }\n              )}\n            </FocusArea>\n          )\n        })}\n      </div>\n      <div className=\"no-print\">\n        <p className=\"print-hint\">\n          You can\n          <span onClick={() => window.print()}> save</span> your results if you\n          want to.\n        </p>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Results\n\nconst Wrapper = styled.div`\n  > .no-print {\n    > h2 {\n      ${tw`\n      my-6\n      text-3xl uppercase \n    `}\n    }\n    > p {\n      > span {\n        ${tw`\n      font-light cursor-pointer text-indigo-600 hover:text-indigo-500\n    `}\n      }\n    }\n    > .result {\n      ${tw`\n        my-2\n        font-light text-indigo-600 text-xl\n      `}\n    }\n\n    > .focusArea {\n      ${tw`\n      flex-1\n      font-medium text-xl text-white \n      `}\n    }\n\n    > .scoring {\n      ${tw`\n      flex-1\n      font-medium text-xl text-white text-right\n      `}\n    }\n  }\n\n  @media print {\n    .no-print {\n      display: none;\n    }\n  }\n`\n\nconst FocusArea = styled.div`\n  ${tw`\n    my-6 \n    rounded-md shadow-2xl bg-gray-100\n  `}\n\n  > h3 {\n    ${tw`\n      px-4 py-2 mt-2 mb-1\n      font-medium text-xl text-white \n      bg-indigo-600 rounded-sm\n    `}\n  }\n\n  > .header {\n    ${tw`\n      flex\n      px-4 py-2 mt-2 mb-1\n      bg-indigo-600 rounded-sm\n    `}\n\n    > .focusArea {\n      ${tw`\n      flex-1\n      font-medium text-xl text-white \n      `}\n    }\n\n    > .scoring {\n      ${tw`\n      flex-1\n      font-medium text-xl text-white text-right\n      `}\n    }\n  }\n\n  > .capa-wrapper {\n    ${tw`\n     px-4 py-2\n    `}\n\n    > .capa-scoring {\n      ${tw`\n          flex\n      `}\n\n      > .capabilities {\n        ${tw`\n          flex-1\n          font-medium text-lg\n        `}\n      }\n\n      > .scoring {\n        ${tw`\n          flex-1\n          font-medium text-lg text-right\n        `}\n      }\n    }\n\n    > .result {\n      ${tw`\n        grid grid-cols-5 \n        py-1\n      `}\n\n      > .practiceItem {\n        ${tw`\n        col-span-4\n        `}\n      }\n\n      > .points {\n        ${tw`\n        text-right \n        font-medium\n        `}\n      }\n    }\n  }\n`\n","import * as t from '../types'\nimport tw, { styled } from 'twin.macro'\n\ntype Props = {\n  question: t.Question\n  counter: t.Counter\n  questionLength: number\n}\n\nconst Question = (props: Props) => {\n  return (\n    <Wrapper>\n      <h2>\n        Question <span className=\"question\">{props.counter.value + 1} </span>\n        of {props.questionLength}\n      </h2>\n      <h3>Focus area</h3>\n      <p>{props.question.focusArea}</p>\n      <h3>Digital Capability</h3>\n      <p>{props.question.digitalCapability}</p>\n      <h3>Practice Item</h3>\n      <p>{props.question.practiceItem}</p>\n    </Wrapper>\n  )\n}\n\nexport default Question\n\nconst Wrapper = styled.div`\n  > h2 {\n    ${tw`\n      mb-6 pt-8\n      font-light text-3xl uppercase \n    `}\n\n    > .question {\n      ${tw`\n      text-3xl text-indigo-600\n    `}\n    }\n  }\n\n  > h3 {\n    ${tw`\n      mt-4 mb-1\n      font-medium text-lg \n    `}\n  }\n`\n","import tw, { styled } from 'twin.macro'\nimport AuthCheck from '../../Components/AuthCheck'\nimport { firestore } from '../../lib/firebase'\n\ntype Props = {\n  setShowGeneralQuestions: (bool: boolean) => void\n}\n\nconst Disclaimer = (props: Props) => {\n  if (!localStorage.getItem('docRef')) {\n    firestore\n      .collection('surveys')\n      .add({})\n      .then((docRef) => {\n        localStorage.setItem('docRef', docRef.id)\n      })\n      .catch((e) => {})\n  } else {\n    props.setShowGeneralQuestions(true)\n  }\n\n  return (\n    <AuthCheck role=\"user\">\n      <Wrapper>\n        <h2>Disclaimer</h2>\n        <h3>Brief explanation of the assessment tool</h3>\n        <p>\n          You will be guided through assessmenmt questions step by step. Your\n          data will be stored anonymously, secure and will only be used for\n          scientiffic purposes. Assessment will take about 20-30 minutes.\n        </p>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            props.setShowGeneralQuestions(true)\n          }}\n        >\n          Start assessment\n        </Button>\n      </Wrapper>\n    </AuthCheck>\n  )\n}\n\nexport default Disclaimer\n\nconst Wrapper = styled.div`\n  > h2 {\n    ${tw`\n      pt-8\n      font-light text-3xl uppercase \n    `}\n  }\n\n  > h3 {\n    ${tw`\n      mt-2 mb-3\n      font-medium text-lg \n    `}\n  }\n`\n\nconst Button = styled.button`\n  ${tw`\n    py-2 px-6 mt-6\n    bg-indigo-600 rounded-md text-white\n    focus:ring-offset-2 focus:ring-indigo-500 hover:bg-indigo-500\n    disabled:opacity-50 disabled:cursor-not-allowed\n  `}\n`\n","import { useState } from 'react'\nimport { firestore } from '../../lib/firebase'\nimport * as t from './types'\nimport useLocalDocRef from './hooks/useLocalDocRef'\nimport useQuestions from '../../hooks/useQuestions'\nimport AuthCheck from '../../Components/AuthCheck'\nimport Buttons from './Components/Buttons'\nimport Feedback from './Components/Feedback'\nimport GeneralQuestions from './Components/GeneralQuestions'\nimport Raiting from './Components/Rating'\nimport Results from './Components/Results'\nimport Question from './Components/Question'\nimport tw, { styled } from 'twin.macro'\nimport Disclaimer from './Disclaimer'\n\nconst Survey = () => {\n  const localDocRef = useLocalDocRef()\n  const questions = useQuestions()\n\n  const [showFeedback, setShowFeedback] = useState<boolean>(false)\n  const [showResults, setShowResults] = useState<boolean>(false)\n  const [showSurvey, setShowSurvey] = useState<boolean>(false)\n  const [showGeneralQuestions, setShowGeneralQuestions] = useState<boolean>(\n    false\n  )\n  const [\n    generalQuestions,\n    setGeneralQuestions,\n  ] = useState<t.GeneralQuestionsAnswer>({\n    industryBelong: '',\n    amountEmployees: '',\n    companyPosition: '',\n  })\n  const [counter, setCounter] = useState<t.Counter>({ value: 0 })\n  const [raiting, setRaiting] = useState<t.Raiting>({\n    questionId: '',\n    value: false,\n    digitalCapability: '',\n    focusArea: '',\n    practiceItem: '',\n  })\n\n  if (showResults)\n    return (\n      <AuthCheck role=\"user\">\n        <Wrapper tw=\"h-5/6\">\n          <Results />\n        </Wrapper>\n      </AuthCheck>\n    )\n\n  if (showGeneralQuestions)\n    return (\n      <AuthCheck role=\"user\">\n        <Wrapper>\n          <GeneralQuestions\n            generalQuestions={generalQuestions}\n            setGeneralQuestions={setGeneralQuestions}\n            setShowGeneralQuestions={setShowGeneralQuestions}\n            setShowSurvey={setShowSurvey}\n            localDocRef={localDocRef}\n            firestore={firestore}\n          />\n        </Wrapper>\n      </AuthCheck>\n    )\n\n  if (showFeedback)\n    return (\n      <AuthCheck role=\"user\">\n        <Wrapper>\n          <Feedback\n            setShowResults={setShowResults}\n            setShowFeedback={setShowFeedback}\n            localDocRef={localDocRef}\n            firestore={firestore}\n          />\n        </Wrapper>\n      </AuthCheck>\n    )\n\n  if (showSurvey)\n    return (\n      <AuthCheck role=\"user\">\n        <Wrapper>\n          {questions.map((question, i) => {\n            if (counter.value === i) {\n              return (\n                <div key={i}>\n                  <Question\n                    question={question}\n                    counter={counter}\n                    questionLength={questions.length}\n                  />\n                  <Raiting setRaiting={setRaiting} question={question} />\n                  <Buttons\n                    counter={counter}\n                    setCounter={setCounter}\n                    raiting={raiting}\n                    setRaiting={setRaiting}\n                    setShowGeneralQuestions={setShowGeneralQuestions}\n                    setShowFeedback={setShowFeedback}\n                    localDocRef={localDocRef}\n                    firestore={firestore}\n                  />\n                </div>\n              )\n            }\n            return <div key={i}></div>\n          })}\n        </Wrapper>\n      </AuthCheck>\n    )\n\n  return (\n    <AuthCheck role=\"user\">\n      <Wrapper>\n        <Disclaimer\n          setShowGeneralQuestions={setShowGeneralQuestions}\n        ></Disclaimer>\n      </Wrapper>\n    </AuthCheck>\n  )\n}\n\nexport default Survey\n\nconst Wrapper = styled.div`\n  ${tw`\n    h-auto w-11/12 sm:w-10/12 md:w-8/12 lg:w-6/12 xl:w-6/12 2xl:w-6/12\n    overflow-y-auto\n    px-4 py-6\n    bg-white rounded-md shadow-2xl\n  `}\n`\n","import { firestore } from '../../../lib/firebase';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport * as t from '../types';\n\nconst useSurveys = () => {\n  const generealQuestionsRef = firestore.collection('surveys');\n  const [data] = useCollection(generealQuestionsRef);\n\n  const surveyData: t.GeneralQuestions[] = [];\n  data?.docs.forEach((doc: t.GeneralQuestionsDocument) => surveyData.push(doc.data()));\n\n  const docs: string[] = [];\n  data?.docs.map((doc: any) => docs.push(doc.id));\n\n  return {\n    surveyData: surveyData,\n    docs: docs,\n  };\n};\n\nexport default useSurveys;\n","import * as t from '../types'\nimport tw, { css, styled } from 'twin.macro'\n\ntype Props = {\n  surveys: {\n    surveyData: t.GeneralQuestions[]\n    docs: string[]\n  }\n}\n\nconst GeneralStatistics = (props: Props) => {\n  const surveyList = props.surveys.surveyData\n\n  let amountEmployees: string[] = []\n  let companyPosition: string[] = []\n  let industryBelong: string[] = []\n  let comprehensiveness: number = 0\n  let consistency: number = 0\n  let problemAdequacy: number = 0\n  const companyPositionValues = {}\n  const industryBelongValues = {}\n  const amountEmployeesValues = {}\n\n  for (let i in surveyList) {\n    amountEmployees.push(surveyList[i].amountEmployees)\n    companyPosition.push(surveyList[i].companyPosition)\n    industryBelong.push(surveyList[i].industryBelong)\n    if (surveyList[i].comprehensiveness !== undefined)\n      comprehensiveness = comprehensiveness + surveyList[i].comprehensiveness\n    if (surveyList[i].consistency !== undefined)\n      consistency = consistency + surveyList[i].consistency\n    if (surveyList[i].problemAdequacy !== undefined)\n      problemAdequacy = problemAdequacy + surveyList[i].problemAdequacy\n\n    if (!companyPositionValues[companyPosition[i]])\n      companyPositionValues[companyPosition[i]] = 0\n    ++companyPositionValues[companyPosition[i]]\n    if (!industryBelongValues[industryBelong[i]])\n      industryBelongValues[industryBelong[i]] = 0\n    ++industryBelongValues[industryBelong[i]]\n    if (!amountEmployeesValues[amountEmployees[i]])\n      amountEmployeesValues[amountEmployees[i]] = 0\n    ++amountEmployeesValues[amountEmployees[i]]\n  }\n\n  return (\n    <Wrapper>\n      <h2> General Statistics</h2>\n      <Area>\n        <h3>Participants by industry</h3>\n        <div className=\"result\">\n          <div className=\"criteria\">Number of Participants:</div>\n          {/* @ts-ignore */}\n          <div className=\"points\">{surveyList.length}</div>\n        </div>\n        {Object.entries(industryBelongValues).map(([key, value]) => (\n          <div className=\"result\">\n            <div className=\"criteria\">{key}:</div>\n            {/* @ts-ignore */}\n            <div className=\"points\">{value}</div>\n          </div>\n        ))}\n      </Area>\n      <Area>\n        <h3>Participants by company size</h3>\n        {Object.entries(amountEmployeesValues).map(([key, value]) => (\n          <div className=\"result\">\n            <div className=\"criteria\">{key}:</div>\n            {/* @ts-ignore */}\n            <div className=\"points\">{value}</div>\n          </div>\n        ))}\n      </Area>\n      <Area>\n        <h3>Participants by position</h3>\n        {Object.entries(companyPositionValues).map(([key, value]) => (\n          <div className=\"result\">\n            <div className=\"criteria\"> {key}:</div>\n            <div className=\"points\"> {value}</div>\n          </div>\n        ))}\n      </Area>\n      <Area>\n        <h3>Feedback</h3>\n        <div className=\"result\">\n          <p className=\"criteria\">Comprehensiveness</p>\n          <p className=\"points\">\n            {(comprehensiveness / surveyList.length).toFixed(2)}\n          </p>\n        </div>\n        <div className=\"result\">\n          <p className=\"criteria\">Consistency</p>\n          <p className=\"points\">\n            {(consistency / surveyList.length).toFixed(2)}\n          </p>\n        </div>\n        <div className=\"result\">\n          <p className=\"criteria\">Problem adequacy</p>\n          <p className=\"points\">\n            {(problemAdequacy / surveyList.length).toFixed(2)}\n          </p>\n        </div>\n      </Area>\n    </Wrapper>\n  )\n}\n\nexport default GeneralStatistics\n\nconst Wrapper = styled.div`\n  > h2 {\n    ${tw`\n      mb-2 mt-6\n      text-3xl uppercase font-light\n    `}\n  }\n`\n\nconst Area = styled.div`\n  ${tw`\n    mt-3\n  `}\n  > h3 {\n    ${tw`\n      font-medium text-lg \n    `}\n  }\n  > .result {\n    ${tw`\n        grid grid-cols-5 \n        py-1\n    `}\n\n    > .criteria {\n      ${tw`\n        col-span-4\n      `}\n    }\n\n    > .points {\n      ${tw`\n        text-right font-medium\n      `}\n    }\n  }\n`\n","import { useMemo, useState } from 'react'\nimport tw, { styled } from 'twin.macro'\nimport { firestore } from '../../../lib/firebase'\nimport * as t from '../types'\n\ntype Props = {\n  surveys: {\n    surveyData: t.GeneralQuestions[]\n    docs: string[]\n  }\n}\n\nconst QuestionStatistics = (props: Props) => {\n  const docs = props.surveys.docs\n  const [statistics, setStatistics]: any = useState([])\n  const [scoring, setScoring] = useState(0)\n  const [capaScoring, setCapaScoring] = useState({})\n  const [focusScoring, setFocusScoring] = useState({})\n\n  useMemo(async () => {\n    const surveyList: t.SurveyList[] = []\n    for (let docId of docs) {\n      const resultsRef = firestore\n        .collection('surveys')\n        .doc(docId)\n        .collection('answers')\n      await resultsRef.get().then((result) => {\n        result.docs.map((doc: any) =>\n          surveyList.push({\n            answerValue: doc.data().answerValue,\n            digitalCapability: doc.data().digitalCapability,\n            focusArea: doc.data().focusArea,\n            practiceItem: doc.data().practiceItem,\n          })\n        )\n      })\n    }\n\n    const areas = {}\n    let capabilityScoring = {}\n    let capabilityLength = {}\n\n    const test = {}\n    for (const entry of surveyList) {\n      const { answerValue, focusArea, digitalCapability, practiceItem } = entry\n      if (!test[focusArea]) {\n        test[focusArea] = {}\n      }\n      if (!test[focusArea][digitalCapability]) {\n        test[focusArea][digitalCapability] = {}\n      }\n      if (Object.keys(test[focusArea][digitalCapability]).length !== 0) {\n        let indicator\n        for (let key of Object.keys(test[focusArea][digitalCapability])) {\n          if (key === practiceItem) {\n            test[focusArea][digitalCapability][practiceItem] += answerValue\n            indicator = true\n          }\n        }\n        if (!indicator) {\n          test[focusArea][digitalCapability][practiceItem] = answerValue\n        }\n      } else {\n        test[focusArea][digitalCapability][practiceItem] = answerValue\n      }\n    }\n\n    setStatistics(\n      Object.keys(test).map((key) => ({\n        [key]: test[key],\n      }))\n    )\n\n    for (const result of surveyList) {\n      const { answerValue, focusArea, digitalCapability, practiceItem } = result\n      if (!areas[focusArea]) {\n        areas[focusArea] = {}\n        capabilityScoring[focusArea] = {}\n        capabilityLength[focusArea] = {}\n      }\n      if (!areas[focusArea][digitalCapability]) {\n        areas[focusArea][digitalCapability] = {}\n        capabilityScoring[focusArea][digitalCapability] = 0\n        capabilityLength[focusArea][digitalCapability] = 0\n      }\n      areas[focusArea][digitalCapability][practiceItem] = answerValue\n      capabilityScoring[focusArea][digitalCapability] += answerValue\n      capabilityLength[focusArea][digitalCapability] += 1\n    }\n\n    let subScoring = {}\n    let scoring = {}\n    let finalScoring = 0\n    for (let focusArea in capabilityScoring) {\n      for (let capability in capabilityScoring[focusArea]) {\n        subScoring = {\n          ...subScoring,\n          [focusArea]: {\n            ...subScoring[focusArea],\n            [capability]:\n              capabilityScoring[focusArea][capability] /\n              capabilityLength[focusArea][capability],\n          },\n        }\n      }\n      scoring = {\n        ...scoring,\n        [focusArea]: 0,\n      }\n      for (let key in subScoring[focusArea]) {\n        scoring = {\n          ...scoring,\n          [focusArea]: scoring[focusArea] + subScoring[focusArea][key],\n        }\n      }\n      scoring = {\n        ...scoring,\n        [focusArea]:\n          scoring[focusArea] / Object.keys(subScoring[focusArea]).length,\n      }\n    }\n    for (let key in scoring) {\n      finalScoring = finalScoring + scoring[key]\n    }\n\n    setCapaScoring(subScoring)\n    setFocusScoring(scoring)\n\n    finalScoring = finalScoring / Object.keys(scoring).length\n    setScoring(finalScoring)\n  }, [docs])\n\n  if (scoring !== 0) {\n    return (\n      <Wrapper>\n        <div className=\"header\">\n          <h2>Question Statistics</h2>\n          <div className=\"head\">\n            <div className=\"criteria\">Ø - digital Score</div>\n            <div className=\"points\">{scoring.toFixed(2)}</div>\n          </div>\n        </div>\n        {statistics.map((result) => {\n          return (\n            <FocusArea>\n              <div className=\"header\">\n                <p className=\"focusArea\">{Object.keys(result)}</p>\n                <p className=\"scoring\">\n                  {focusScoring[Object.keys(result)[0]].toFixed(2)}\n                </p>\n              </div>\n              {Object.keys(result[Object.keys(result)[0]]).map(\n                (capabilities) => {\n                  return (\n                    <div className=\"capa-wrapper\">\n                      <div className=\"capa-scoring\">\n                        <p className=\"capabilities\">{capabilities}</p>\n                        <p className=\"scoring\">\n                          {capaScoring[Object.keys(result)[0]][\n                            capabilities\n                          ].toFixed(2)}\n                        </p>\n                      </div>\n                      {Object.entries(\n                        result[Object.keys(result)[0]][capabilities]\n                      ).map((practiceItem) => (\n                        <div className=\"result\">\n                          <div className=\"practiceItem\">\n                            {practiceItem[0] + ' '}\n                          </div>\n                          <div className=\"points\">\n                            {/* @ts-ignore */}\n                            {(practiceItem[1] / docs.length).toFixed(2) + ' P.'}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )\n                }\n              )}\n            </FocusArea>\n          )\n        })}\n      </Wrapper>\n    )\n  }\n\n  return <></>\n}\n\nexport default QuestionStatistics\n\nconst Wrapper = styled.div`\n  > .header {\n    ${tw`\n      \n    `}\n    > h2 {\n    ${tw`\n      my-6\n      font-light text-3xl uppercase \n    `}\n  }\n  > .head {\n    ${tw`\n      font-semibold text-lg uppercase \n    `}\n  }\n  }\n`\n\nconst FocusArea = styled.div`\n  ${tw`\n    my-6 \n    rounded-md shadow-2xl bg-gray-100\n  `}\n\n  > h3 {\n    ${tw`\n      px-4 py-2 mt-2 mb-1\n      font-medium text-xl text-white \n      bg-indigo-600 rounded-sm\n    `}\n  }\n\n  > .header {\n    ${tw`\n      flex\n      px-4 py-2 mt-2 mb-1\n      bg-indigo-600 rounded-sm\n    `}\n\n    > .focusArea {\n      ${tw`\n      flex-1\n      font-medium text-xl text-white \n      `}\n    }\n\n    > .scoring {\n      ${tw`\n      flex-1\n      font-medium text-xl text-white text-right\n      `}\n    }\n  }\n\n  > .capa-wrapper {\n    ${tw`\n     px-4 py-2\n    `}\n\n    > .capa-scoring {\n      ${tw`\n          flex\n      `}\n\n      > .capabilities {\n        ${tw`\n          flex-1\n          font-medium text-lg\n        `}\n      }\n\n      > .scoring {\n        ${tw`\n          flex-1\n          font-medium text-lg text-right\n        `}\n      }\n    }\n\n    > .result {\n      ${tw`\n        grid grid-cols-5 \n        py-1\n      `}\n\n      > .practiceItem {\n        ${tw`\n        col-span-4\n        `}\n      }\n\n      > .points {\n        ${tw`\n        text-right\n        `}\n      }\n    }\n  }\n`\n","import tw, { styled } from 'twin.macro'\n\ntype Props = {\n  showAddNew: boolean\n  setShowAddNew: (bool: boolean) => void\n  showGeneral: boolean\n  setShowGeneral: (bool: boolean) => void\n  showQuestionStatistics: boolean\n  setShowQuestionStatistics: (bool: boolean) => void\n}\n\nconst Buttons = (props: Props) => {\n  return (\n    <Wrapper>\n      <Button\n        onClick={() => {\n          props.setShowQuestionStatistics(false)\n          props.setShowAddNew(false)\n          props.setShowGeneral(true)\n        }}\n      >\n        General\n      </Button>\n      <Button\n        onClick={() => {\n          props.setShowGeneral(false)\n          props.setShowAddNew(false)\n          props.setShowQuestionStatistics(true)\n        }}\n      >\n        Statistics\n      </Button>\n      <Button\n        onClick={() => {\n          props.setShowGeneral(false)\n          props.setShowQuestionStatistics(false)\n          props.setShowAddNew(true)\n        }}\n      >\n        Add\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default Buttons\n\nconst Wrapper = styled.div``\n\nconst Button = styled.button`\n  ${tw`\n    mr-1 p-1 mb-1\n    uppercase border-2 border-indigo-500 rounded-md\n  `}\n`\n","import { useState } from 'react'\nimport { firestore } from '../../../lib/firebase'\nimport tw, { styled } from 'twin.macro'\n\ntype Props = {\n  question: Question\n  setEdit: (number: number) => void\n}\n\ntype Question = {\n  id: string\n  focusArea: string\n  digitalCapability: string\n  practiceItem: string\n}\n\nconst Edit = (props: Props) => {\n  const [editFocusArea, setEditFocusArea] = useState(props.question.focusArea)\n  const [editDigitalCapability, setEditDigitalCapability] = useState(\n    props.question.digitalCapability\n  )\n  const [editPracticeItem, setEditPracticeItem] = useState(\n    props.question.practiceItem\n  )\n\n  const updateQuestion = async (questionId: Question['id']) => {\n    await firestore.collection('questions').doc(questionId).update({\n      focusArea: editFocusArea,\n      digitalCapability: editDigitalCapability,\n      practiceItem: editPracticeItem,\n    })\n  }\n\n  return (\n    <Wrapper>\n      <Input\n        placeholder=\"Insert focus area\"\n        value={editFocusArea}\n        onChange={(e) => setEditFocusArea(e.target.value)}\n      ></Input>\n      <p>Digital Capability:</p>\n      <Input\n        placeholder=\"Insert digital capability\"\n        value={editDigitalCapability}\n        onChange={(e) => setEditDigitalCapability(e.target.value)}\n      ></Input>\n      <p>Practice Item</p>\n      <Input\n        placeholder=\"Insert practice item\"\n        value={editPracticeItem}\n        onChange={(e) => setEditPracticeItem(e.target.value)}\n      ></Input>\n      <Button onClick={() => props.setEdit(0)}>discard</Button>\n      <Button\n        onClick={() => {\n          updateQuestion(props.question.id)\n          props.setEdit(0)\n        }}\n      >\n        save\n      </Button>\n    </Wrapper>\n  )\n}\n\nexport default Edit\n\nconst Wrapper = styled.div`\n  > h2 {\n    ${tw`\n      mb-2 mt-6\n      font-light text-3xl uppercase \n    `}\n  }\n\n  > h3 {\n    ${tw`\n      mt-2 mb-1\n      font-medium text-lg \n    `}\n  }\n`\n\nconst Input = styled.input`\n  ${tw`\n    w-full\n    p-2 m-0\n    rounded-md shadow-sm border border-gray-300\n    focus:outline-none focus:ring focus:ring-indigo-400\n    placeholder-black text-black\n  `}\n`\n\nconst Button = styled.button`\n  ${tw`\n    py-1 px-6 mt-4 mr-2\n    bg-indigo-600 rounded-md text-white\n    focus:ring-offset-2 focus:ring-indigo-500 hover:bg-indigo-500\n    disabled:opacity-50 disabled:cursor-not-allowed\n  `}\n`\n","import { useState } from 'react'\nimport { BsTrash, BsPencil, BsArrowUp, BsArrowDown } from 'react-icons/bs'\nimport tw, { styled } from 'twin.macro'\nimport { firestore } from '../../../lib/firebase'\nimport useQuestions from '../../../hooks/useQuestions'\nimport Edit from './Edit'\n\ntype Props = {\n  focusArea: string\n  setFocusArea: (bostringol: string) => void\n  digitalCapability: string\n  setDigitalCapability: (string: string) => void\n  practiceItem: string\n  setPracticeItem: (string: string) => void\n}\n\nconst NewQuestion = (props: Props) => {\n  const questions = useQuestions()\n  const [edit, setEdit] = useState(0)\n\n  const postQuestion = async () => {\n    const newQuestionRef = firestore.collection('questions').doc()\n\n    const data = {\n      focusArea: props.focusArea,\n      digitalCapability: props.digitalCapability,\n      practiceItem: props.practiceItem,\n    }\n    await newQuestionRef.set(data)\n  }\n\n  const deleteQuestion = async (questionId) => {\n    const confirm = window.confirm(\n      'Are you sure to delete? All answers for this questions will be deleted too.'\n    )\n    if (confirm) {\n      await firestore.collection('questions').doc(questionId).delete()\n    }\n  }\n\n  const updateQuestion = async (questionId, listing) => {\n    await firestore.collection('questions').doc(questionId).update({\n      listing: listing,\n    })\n  }\n\n  const sortUp = (question, i) => {\n    updateQuestion(questions[i]['id'], questions[i]['listing'] - 1)\n    updateQuestion(questions[i - 1]['id'], questions[i - 1]['listing'] + 1)\n  }\n\n  const sortDown = (question, i) => {\n    updateQuestion(questions[i]['id'], questions[i]['listing'] + 1)\n    updateQuestion(questions[i + 1]['id'], questions[i + 1]['listing'] - 1)\n  }\n\n  return (\n    <Wrapper>\n      <h2>Add new questions</h2>\n      <h3>Focus area</h3>\n      <Input\n        placeholder=\"Insert focus area\"\n        value={props.focusArea}\n        onChange={(e) => props.setFocusArea(e.target.value)}\n      ></Input>\n      <h3>Digital Capability</h3>\n      <Input\n        placeholder=\"Insert digital capability\"\n        value={props.digitalCapability}\n        onChange={(e) => props.setDigitalCapability(e.target.value)}\n      ></Input>\n      <h3>Practice Item</h3>\n      <Input\n        placeholder=\"Insert practice item\"\n        value={props.practiceItem}\n        onChange={(e) => props.setPracticeItem(e.target.value)}\n      ></Input>\n      <Button onClick={() => postQuestion()}>Create</Button>\n      <h2>Config current Questions</h2>\n      {questions?.map((question, i) => (\n        <FocusArea>\n          <div className=\"header\">\n            <h3>{question.focusArea}</h3>\n            {i > 0 && <BsArrowUp onClick={() => sortUp(question, i)} />}\n            {i + 1 < questions.length && (\n              <BsArrowDown onClick={() => sortDown(question, i)} />\n            )}\n            <BsPencil\n              onClick={() => {\n                setEdit(i + 1)\n              }}\n            />\n            <BsTrash onClick={() => deleteQuestion(question.id)} />\n          </div>\n          <div>{question.digitalCapability}</div>\n          <div>{question.practiceItem}</div>\n          {edit === i + 1 && <Edit question={question} setEdit={setEdit} />}\n        </FocusArea>\n      ))}\n    </Wrapper>\n  )\n}\n\n/* \naddQuestion(1)\n*/\n\nexport default NewQuestion\n\nconst Wrapper = styled.div`\n  > h2 {\n    ${tw`\n      mb-2 mt-6\n      font-light text-3xl uppercase \n    `}\n  }\n\n  > h3 {\n    ${tw`\n      mt-2 mb-1\n      font-medium text-lg \n    `}\n  }\n`\n\nconst Input = styled.input`\n  ${tw`\n    w-full\n    p-2 m-0\n    rounded-md shadow-sm border border-gray-300\n    focus:outline-none focus:ring focus:ring-indigo-400\n    placeholder-black text-black\n  `}\n`\n\nconst Button = styled.button`\n  ${tw`\n    py-2 px-6 mt-4\n    bg-indigo-600 rounded-md\n    text-white\n    focus:ring-offset-2 focus:ring-indigo-500 hover:bg-indigo-500\n    disabled:opacity-50 disabled:cursor-not-allowed\n  `}\n`\n\nconst FocusArea = styled.div`\n  ${tw`\n    p-4 my-6 \n    rounded-md shadow-xl bg-gray-100\n  `}\n\n  > .header {\n    ${tw`\n      grid grid-cols-12\n    `}\n\n    > h3 {\n      ${tw`\n      col-span-8\n      mb-1\n      font-medium text-xl \n    `}\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport tw, { styled } from 'twin.macro'\nimport AuthCheck from '../../Components/AuthCheck'\nimport useSurveys from './hooks/useSurveys'\nimport GeneralStatistics from './Components/GeneralStatistics'\nimport QuestionStatistics from './Components/QuestionStatistics'\nimport Buttons from './Components/Buttons'\nimport NewQuestion from './Components/NewQuestion'\n\nconst Controllcenter = () => {\n  const surveys = useSurveys()\n\n  const [focusArea, setFocusArea] = useState('')\n  const [digitalCapability, setDigitalCapability] = useState('')\n  const [practiceItem, setPracticeItem] = useState('')\n\n  const [showQuestionStatistics, setShowQuestionStatistics] = useState(false)\n  const [showGeneral, setShowGeneral] = useState(false)\n  const [showAddNew, setShowAddNew] = useState(false)\n\n  if (showQuestionStatistics) {\n    return (\n      <AuthCheck role=\"admin\">\n        <Wrapper>\n          <Buttons\n            showAddNew={showAddNew}\n            setShowAddNew={setShowAddNew}\n            showGeneral={showGeneral}\n            setShowGeneral={setShowGeneral}\n            showQuestionStatistics={showQuestionStatistics}\n            setShowQuestionStatistics={setShowQuestionStatistics}\n          />\n          <QuestionStatistics surveys={surveys} />\n        </Wrapper>\n      </AuthCheck>\n    )\n  }\n\n  if (showAddNew) {\n    return (\n      <AuthCheck role=\"admin\">\n        <Wrapper>\n          <Buttons\n            showAddNew={showAddNew}\n            setShowAddNew={setShowAddNew}\n            showGeneral={showGeneral}\n            setShowGeneral={setShowGeneral}\n            showQuestionStatistics={showQuestionStatistics}\n            setShowQuestionStatistics={setShowQuestionStatistics}\n          />\n          <NewQuestion\n            focusArea={focusArea}\n            setFocusArea={setFocusArea}\n            digitalCapability={digitalCapability}\n            setDigitalCapability={setDigitalCapability}\n            practiceItem={practiceItem}\n            setPracticeItem={setPracticeItem}\n          />\n        </Wrapper>\n      </AuthCheck>\n    )\n  }\n\n  return (\n    <AuthCheck role=\"admin\">\n      <Wrapper>\n        <Buttons\n          showAddNew={showAddNew}\n          setShowAddNew={setShowAddNew}\n          showGeneral={showGeneral}\n          setShowGeneral={setShowGeneral}\n          showQuestionStatistics={showQuestionStatistics}\n          setShowQuestionStatistics={setShowQuestionStatistics}\n        />\n        <GeneralStatistics surveys={surveys} />\n      </Wrapper>\n    </AuthCheck>\n  )\n}\n\nexport default Controllcenter\n\nconst Wrapper = styled.div`\n  ${tw`\n    h-5/6 w-11/12 sm:w-10/12 md:w-8/12 lg:w-6/12 xl:w-4/12 2xl:w-4/12\n    px-4 md:px-10 py-6 my-10\n    bg-white rounded-md shadow-2xl\n    overflow-y-auto\n  `}\n\n  > h2 {\n    ${tw`\n      mb-6 pt-8\n      font-light text-3xl uppercase \n    `}\n  }\n\n  > h3 {\n    ${tw`\n      mt-4 mb-1\n      font-medium text-lg \n    `}\n  }\n`\n","import { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport tw, { styled } from 'twin.macro'\nimport Survey from './Pages/Survey/Survey'\nimport Controllcenter from './Pages/Admin/Controllcenter'\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Survey />\n          </Route>\n          <Route exact path=\"/admin\">\n            <Controllcenter />\n          </Route>\n          <Redirect from=\"/\" to=\"/\" />\n        </Switch>\n      </BrowserRouter>\n    </Wrapper>\n  )\n}\n\nexport default App\n\nconst Wrapper = styled.div(() => [\n  tw`\n    h-screen flex justify-center items-center\n    bg-gradient-to-t from-indigo-500 to-indigo-100\n  `,\n])\n","import ReactDOM from 'react-dom'\nimport GlobalStylesComponent from './Components/GlobalStyles'\nimport App from './App'\n\nReactDOM.render(\n  <>\n    <GlobalStylesComponent />\n    <App />\n  </>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}